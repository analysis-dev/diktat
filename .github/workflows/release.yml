name: Create diKTat release

on:
  push:
    tags:
      - 'v*'

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=true -Dorg.gradle.parallel=true -Dorg.gradle.welcome=never
  GPG_SEC: ${{ secrets.PGP_SEC }}
  GPG_PASSWORD: ${{ secrets.PGP_PASSWORD }}
  OSSRH_USERNAME: ${{ secrets.SONATYPE_USER }}
  OSSRH_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  release:
    name: 'Release'
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          # Fetch Git tags, so that semantic version can be calculated.
          # Alternatively, run `git fetch --prune --unshallow --tags` as the
          # next step, see
          # https://github.com/actions/checkout/issues/206#issuecomment-607496604.
          fetch-depth: 0

      - name: 'Set up Java'
        uses: actions/setup-java@v3
        with:
          java-version: 11
          distribution: temurin

      - name: 'Publish a release to GitHub'
        id: publish-github
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            publishAllPublicationsToGitHubRepository

      - name: 'Publish a release to Maven Central'
        id: publish-sonatype
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            publishToSonatype
            closeAndReleaseSonatypeStagingRepository

      - name: 'Publish a release to Gradle Plugins'
        id: publish-sonatype
        uses: gradle/gradle-build-action@v2
        with:
          gradle-version: wrapper
          arguments: |
            :diktat-gradle-plugin:publishPlugins
            -Pgradle.publish.key=${{ secrets.GRADLE_KEY }}
            -Pgradle.publish.secret=${{ secrets.GRADLE_SECRET }}

  github_release:
    needs: release
    name: 'Github Release'
    runs-on: ubuntu-latest
    steps:
      - name: 'Github Release'
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
