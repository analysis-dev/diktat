name: Create diKTat release

on:
  push:
    tags:
      - 'v*'

jobs:
  build:
    name: Build release
    runs-on: ubuntu-18.04

    steps:
      - name: Checkout
        uses: actions/checkout@v1
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Set environment variables
        run: |
          echo ::set-env name=RELEASE_VERSION::${GITHUB_REF#'refs/tags/v'}
          echo Building release for version ${{ env.RELEASE_VERSION }}
      - name: Set version
        run: mvn -B versions:set -DnewVersion=${{ env.RELEASE_VERSION }} versions:commit
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_VERSION }}
          draft: false
          prerelease: false
      - name: Deploy artifacts
        run: mvn -B clean deploy -Dusername=${{ secrets.ARTIPIE_USER }} -Dpassword=${{ secrets.ARTIPIE_PASSWORD }}
      - name: Upload assets to github releases
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./diktat-rules/target/diktat-rules-${{ env.RELEASE_VERSION }}-jar-with-dependencies.jar
          asset_name: diktat-rules-${{ env.RELEASE_VERSION }}-jar-with-dependencies.jar
          asset_content_type: application/zip
      - name: Increment development version
        run: |
          mvn -B versions:set -DnextSnapshot=true -DprocessAllModules=true versions:commit
          git add *pom.xml
          git config --local user.email "diktat@cqfn.org"
          git config --local user.name "diktat_build"
          git commit -m "Prepare next development iteration"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: master
          tags: false
