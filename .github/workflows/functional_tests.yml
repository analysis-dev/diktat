name: Run functional tests

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GRADLE_OPTS: -Dorg.gradle.daemon=false  # to speed up gradle run

jobs:
  run_diktat_from_CLI:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    steps:
      - uses: actions/checkout@v2.3.3

      - name: Setup environment
        run: |
          cat pom.xml | grep "<diktat-check.version>.*</diktat-check.version>" | head -1 | awk -F'[><]' '{ print "DIKTAT_VERSION=%s\n",$3 }' >> $GITHUB_ENV
          cat pom.xml | grep "<ktlint.version>.*</ktlint.version>" | head -1 | awk -F'[><]' '{ print "KTLINT_VERSION=%s\n",$3 }' >> $GITHUB_ENV
          curl -sSLO https://github.com/pinterest/ktlint/releases/download/${{ env.KTLINT_VERSION }}/ktlint && chmod a+x ktlint
          curl -sSLO https://github.com/cqfn/diKTat/releases/download/v${{ env.DIKTAT_VERSION }}/diktat-${{ env.DIKTAT_VERSION }}.jar
        shell: bash
        
      - name: Copy diktat-analysis.yml from release
        run: |
          unzip -q -d tmp diktat-${{ env.DIKTAT_VERSION }}.jar
          DIKTAT_CONFIG=diktat-analysis.yml
          find tmp -name $DIKTAT_CONFIG -exec cp "{}" . \;
        shell: bash

      - name: Run diKTat from cli
        continue-on-error: true
        run: |
          ./ktlint -R diktat-${{ env.DIKTAT_VERSION }}.jar "examples/maven/src/main/kotlin/Test.kt" &> out
        shell: bash

      - name: Check output
        id: cli-check
        run: |
          cat out
          grep -E "\[VARIABLE_NAME_INCORRECT_FORMAT\]" out
        shell: bash

  run_diktat_from_gradle:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2.3.3

      - name: Setup environment
        run: |
          cat pom.xml | grep "<diktat-check.version>.*</diktat-check.version>" | head -1 | awk -F'[><]' '{ print "DIKTAT_VERSION=%s\n",$3 }' >> $GITHUB_ENV
          curl -sSLO https://github.com/cqfn/diKTat/releases/download/v${{ env.DIKTAT_VERSION }}/diktat-${{ env.DIKTAT_VERSION }}.jar
          unzip -q -d tmp diktat-${{ env.DIKTAT_VERSION }}.jar
          DIKTAT_CONFIG=diktat-analysis.yml
          find tmp -name $DIKTAT_CONFIG -exec cp "{}" . \;
        shell: bash

      - name: Run diKTat from gradle kotlin DSL
        continue-on-error: true
        working-directory: ./examples/gradle-kotlin-dsl
        run: |
          gradle diktatCheck &> out
        shell: bash

      - name: Check gradle from kotlin DSL
        working-directory: ./examples/gradle-kotlin-dsl
        run: |
          cat out
          grep -E "\[VARIABLE_NAME_INCORRECT_FORMAT\]" out
        shell: bash

      - name: Run diKTat from gradle groovy DSL
        continue-on-error: true
        working-directory: ./examples/gradle-groovy-dsl
        run: |
          gradle diktatCheck &> out
        shell: bash

      - name: Check gradle from groovy DSL
        working-directory: ./examples/gradle-groovy-dsl
        run: |
          cat out
          grep -E "\[VARIABLE_NAME_INCORRECT_FORMAT\]" out
        shell: bash

  run_diktat_from_maven:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    steps:
      - uses: actions/checkout@v2.3.3

      - name: Setup environment
        run: |
          cat pom.xml | grep "<diktat-check.version>.*</diktat-check.version>" | head -1 | awk -F'[><]' '{ printf "DIKTAT_VERSION=%s\n",$3 }' >> $GITHUB_ENV
          curl -sSLO https://github.com/cqfn/diKTat/releases/download/v${{ env.DIKTAT_VERSION }}/diktat-${{ env.DIKTAT_VERSION }}.jar
          unzip -q -d tmp diktat-${{ env.DIKTAT_VERSION }}.jar
          DIKTAT_CONFIG=diktat-analysis.yml
          find tmp -name $DIKTAT_CONFIG -exec cp "{}" . \;
        shell: bash

      - name: Run diKTat from maven
        working-directory: ./examples/maven
        continue-on-error: true
        run: mvn -B diktat:check &> out
        shell: bash

      - name: Check maven
        working-directory: ./examples/maven
        run: |
          cat out
          grep -E "\[VARIABLE_NAME_INCORRECT_FORMAT\]" out
        shell: bash
